Response ID,Date submitted,Last page,Start language,Seed,Ready?,Ready?,Enter the password to continue (Ask US after Playing with the debugger for 15 minutes),Bug 1:     This first bug has to do with how the Fibonacci is defined here. This Fibonacci function uses n+1 and n+2 what leads to a diverging function as the base case is never reached. The solution is to replace n+1 by n-1 and n+2 by n-2.       Did you find the bug?    ,How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],"Bug 2:     The second bug can be found in the matrix multiply function (tasks/matrix.cpp). Here the sum variable is cleared only every row iteration, while it should be cleared every column as well. The solution is to move the int sum =0 to within the (j &lt; 6) while loop.       Did you find the bug?    ",How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],"Bug 3:     The last bug is a famous intermittent bug. The UART peripheral is only initialized after the restoration of the memory after a power failure. This means whenever a power failure occurs and case 2 or 3 is true, this UART initialization is skipped. One can solve this by moving the UART setup to someplace before the switch-case.       Did you find the bug?    ",How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],Enter the password to continue (Ask US after Playing with the debugger for 15 minutes),"Bug 1:  The snippet shows the first bug of the WISP system. The blink_COUNTER variable is misspelt, this creates an infinite loop as blink_C0UNTER is never updated. The solution is to replace the 0 with O.       Did you find the bug?    ",How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],"Bug 2:  The second bug has to do with the result variable, which is never pointed to any memory. This can be solved by allocating the memory using malloc or by initializing the array at the beginning.       Did you find the bug?    ",How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],"Bug 3:  The snippet shows bug 3. The initialization of the ADC (setup_adc()) happens after the restoration, although, if restoring after a power failure case 2 or 3 is true, the setup is not executed. This is a very common mistake in Intermittent Computing Systems. The solution is to move the setup_adc() function above the restoration (switch case)       Did you find the bug?    ",How difficult was it to find the bug? [Debugger],Did you find the bug using the debugger? (Otherwise please specify),Did you find the bug using the debugger? (Otherwise please specify) [Other],Did the debugger help in finding the bug? [Debugger],If you would work on the code for battery-free device: would you use this debugger system? [System A],If you would work on the code for battery-free device: would you use this debugger system? [System B],Was the debugging experience with each debugging system close to the one you have? [System A],Was the debugging experience with each debugging system close to the one you have? [System B],How intuitive to use was each of the debugging systems? [System A],How intuitive to use was each of the debugging systems? [System B],How easy to use was each of the debugging systems? [System A],How easy to use was each of the debugging systems? [System B],What are the positive aspects about System B?,What are the negative aspects about System B?,What are the positive aspects about System A?,What are the negative aspects about System A?,What is your age?,You are:,With which programming language you are most comfortable with?,With which programming language you are most comfortable with? [Other],Have you ever used an Integrated Development Environment (IDE) when developing your applications?,Do you prefer to develop your applications using an Integrated Development Environment (IDE)?,How do you assess your embedded systems programming skills? [Expertise],Have you ever used hardware-based debuggers for your embedded project (such as Seggers J-link - see photo below)?   ,"Have you ever used debugging techniques such as breakpoints, watchpoints, memory views, peripheral views, etc. while debugging an embedded system?",What are your most used debugging techniques? [Breakpoints/Watchpoints],What are your most used debugging techniques? [printf()],What are your most used debugging techniques? [Single stepping],What are your most used debugging techniques? [Memory inspection],What are your most used debugging techniques? [Other],Have you heard about battery-free intermittently-powered systems before the start of this study?,Have you ever programmed battery-free/intermittently-powered systems?,According to you: how difficult is the application development for battery-free intermittently-powered systems? [Writing code for Battery-free systems],Total time,Group time: Crash course on intermittently-powered battery-free embedded systems,Question time: Introduction,Group time: Note on the Intermittent Power Supply ,Question time: IntroductionB,Group time: System A Bug Hunt,Question time: A000,Question time: BugA10,Question time: BugA11,Question time: BugA12,Question time: BugA13,Question time: BugA20,Question time: BugA21,Question time: BugA22,Question time: BugA23,Question time: BugA30,Question time: BugA31,Question time: BugA32,Question time: BugA33,Group time: System B Bug Hunt,Question time: B000,Question time: BugB10,Question time: BugB11,Question time: BugB12,Question time: BugB13,Question time: BugB20,Question time: BugB21,Question time: BugB22,Question time: BugB23,Question time: BugB30,Question time: BugB31,Question time: BugB32,Question time: BugB33,Group time: Debugger Systems Assessment,Question time: C1,Question time: C2,Question time: C3,Question time: C4,Question time: C5,Question time: C6,Question time: C7,Question time: C8,Group time: Personal Information,Question time: A12,Question time: A1,Question time: A2,Question time: A3,Question time: A4,Question time: A5,Question time: A6,Question time: A7,Question time: A8,Question time: A9,Question time: A10,Question time: A11
1,,2,en,704032007,Yes,Yes,,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2,,2,en,54428909,Yes,Yes,,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3,,2,en,948952438,Yes,Yes,pear,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,2022-09-26 12:23:05,6,en,1899562523,Yes,Yes,apple,Yes,Somewhat difficult,Yes,,A little,Yes,Very difficult,Other,the logic of summation,No,No,,,,,pear,No,,,,,Yes,Somewhat difficult,Other,logic and experience with c,No,No,,,,,Yes,No,Similar to what I am used to,Similar to what I am used to,Intuitive,Non-intuitive,Somewhat difficult,Very difficult,"With some more experience, i could imagine that you have more control over the way this debugger works.",it is counterintuitive. the need for flushing especially.,intuitive and commonly used,a bit of a black box what is actually happening,28,Male,Python,,Yes,No,Little experience,No,Yes,Yes,Yes,Yes,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5,,2,en,241951371,Yes,Yes,,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,,3,en,511071445,Yes,Yes,apple,Yes,Easy,Yes,,Yes,Yes,Neither easy nor difficult,Yes,,Yes,No,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7,2022-09-26 14:27:16,6,en,1750703097,Yes,Yes,apple,Yes,Easy,Yes,,Yes,Yes,Neither easy nor difficult,Yes,,Yes,No,,,,,pear,Yes,Very difficult,Yes,,A little,No,,,,,No,,,,,Yes,No,Similar to what I am used to,Very different from what I am used to,Absolutely intuitive,Absolutely non-intuitive,Very easy,Very difficult,I suppose having the breakpoints directly in the source files makes it easier to have the same breakpoints on multiple machines,"- Recompiling after every change in breakpoints is very cumbersome
- Being ""CLI only"" makes it hard to make intuitive sense of what is happening
-  I wasn't able to define multiple breakpoints","- Easy to use and understand
- Changing breakpoint locations on the go is helpful
- Stepping through code is very useful 
- Having all the values of variables in the context in one overview is nice",Compared to system B I cannot think of any,27,Male,C/C++,,Yes,Yes,A lot of experience,Yes,Yes,Yes,Yes,Yes,Yes,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
8,,3,en,647297054,Yes,Yes,apple,No,,,,,No,,,,,No,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,,2,en,694785966,Yes,Yes,,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,2022-09-27 12:29:22,6,en,37717934,Yes,Yes,apple,Yes,Easy,Yes,,A little,No,,,,,No,,,,,pear,Yes,Somewhat difficult,Yes,,A little,No,,,,,No,,,,,Yes,No,Similar to what I am used to,Neither different nor similar,Non-intuitive,Non-intuitive,Neither easy nor difficult,Very difficult,You can work faster because it's keyboard driven.,You have to manually plug the usb in and out. You have to reflash after adding a breakpoint. The debugger has a steep learning curve.,The debugger is more user friendly. Connects with the vscode editor nicely. ,Where to reflash memory wasn't clear at the start. Has a slightly less steep learning curve but still not easy at first glance (if you don't know about vs code debugging).,26,Male,Python,,Yes,No,No experience,No,No,N/A,N/A,N/A,N/A,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
11,2022-09-28 16:29:56,6,en,150048548,Yes,Yes,apple,Yes,Easy,Yes,,Yes,Yes,Neither easy nor difficult,Yes,,A lot,Yes,Neither easy nor difficult,Yes,,A lot,pear,No,,,,,No,,,,,No,,,,,Yes,No,Very similar to what I am used to,Very different from what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,"I was unable to get the system to work properly, therefore I cannot assess any positive aspects related to it.","Incredibly unintuitive, for one needs to read a lot of documentation in order to start using the system.

The procedure with plugging the USB in, flashing, then unplugging is cumbersome, error-prone and unintuitive. 

I could not get the memory address of any variable since the command msp430-elf-nm was not found in the system, and could therefore not read out the values of the variables using the debug prompt.

The need to put breakpoint commands inside the code, recompile, and then run it again, takes up too much time and is also error-prone.

It took me a while to realize that I need to stop the power to the device, then set it to constant voltage in order for the controller to reach the breakpoint. ","Very close to debugging a software system. The implemented watches, breakpoints in the source code, available variable names (and also the fact that pointers were dereferenced in the Variables interface) made it easy to observe the changes in values.","I personally did not like the fact that I had to open a separate monitor console for the serial output manually, even though that was easily done via the menu in VS Code. 
",20,Male,Python,,Yes,Yes,Little experience,No,No,N/A,N/A,N/A,N/A,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
12,2022-09-28 18:40:14,6,en,268779030,Yes,Yes,apple,Yes,Easy,Yes,,Yes,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Similar to what I am used to,Very different from what I am used to,Absolutely intuitive,Non-intuitive,Easy,Very difficult,Easy to find low level details of the program like the memory address of variables.,No GUI which makes using this debugger less intuitive. Not being able to visualize where the program is currently breaking also sucks. No easy way to see the human readable values of variables (maybe there is but I didn't really find one).,"The GUI makes debugging a lot more intuitive and easy to get started, also being able to hover over variables to see their value is very useful. Clicking buttons to step over, continue or step in is also very user-friendly.",Initially it was not clear to me that the monitor was running in a different terminal.,25,Male,C#,,Yes,Yes,Some experience,No,Yes,Yes,No,Yes,No,,No,No,Similiar to battery-powered embedded systems,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,2022-09-29 10:35:33,6,en,1763509125,Yes,Yes,apple,Yes,Somewhat difficult,Other,"analyse the code, what it is ment to do",A little,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Very similar to what I am used to,Very different from what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,non,many steps to start debuging. Very limited information on de bug/error the program run into ,no need to change code. Time saving. more user friendly interface ,"although better informed on the code and process, still limited information on the bug/error the program run into",36,Male,Python,,Yes,Yes,No experience,No,Yes,Yes,Yes,Yes,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,2022-09-30 16:28:56,6,en,1046023620,Yes,Yes,apple,Yes,Easy,Yes,,Yes,No,,,,,No,,,,,pear,Yes,Somewhat difficult,Other,Noticed the mistake,No,No,,,,,No,,,,,Yes,No,Different from what I am used to,Very similar to what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,It's  IDE independent ,"The 'wait' and 'int' was very unintuitive for me, also having to attach the device every time can be really tedious","The UI, not needing to flash every time, breakpoints separated from the source code",Not IDE independent,21,Male,Java,,Yes,Yes,Little experience,No,No,N/A,N/A,N/A,N/A,,Yes,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,2022-09-30 18:32:56,6,en,2065406343,Yes,Yes,apple,Yes,Easy,Yes,,Yes,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Similar to what I am used to,Very different from what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,None?,"Only with commands, hard to remember the commands, hard to know the current state, not flexible, not intuitive","Use a graphic interface, easy to know where we are in the code, see the variables values, intuitive",I had sometimes an error saying that I had too many breakpoints?,27,Female,C#,,Yes,Yes,Little experience,No,Yes,Yes,Yes,Yes,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,2022-10-04 12:11:46,6,en,1692036006,Yes,Yes,apple,No,,,,,No,,,,,No,,,,,pear,Yes,Easy,Other,Looking at .h files,No,No,,,,,Yes,Easy,Other,Reading the code,No,No,No,Very different from what I am used to,Different from what I am used to,Non-intuitive,Absolutely non-intuitive,Somewhat difficult,Very difficult,"It doesn't depend on VScode specific plugins.
So I could edit my source in Vim, for example, and still use this debugger.","The flash.sh script doesn't seem to actually upload to the device, I think.
It would be a lot nicer for me if this was just a makefile, which I am familiar with.
It would be nice if debug.sh allowed for command line options like setting baud rate, /dev/ port, etc.
That way I wouldn't need to run 'attach' every time.
More advanced line editing (vim keybinds :)?) would also be nice.
I never got breakpoints to work, so I can't comment on it other than I couldn't get them to work even after 30 minutes.","It's integrated with VScode, so I can see where my breakpoint is, set new ones, pause etc.","I have never used VScode before, so I had no idea where to look for debugging functions or even how to open code in multiple tabs!
If someone is used to Vim or CLion, they will not like system A.",23,Female,C/C++,,No,No,Some experience,Yes,Yes,Yes,No,Yes,Yes,,No,No,Similiar to battery-powered embedded systems,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,2022-10-04 14:29:18,6,en,1888372034,Yes,Yes,apple,Yes,Somewhat difficult,Yes,,A little,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Neither different nor similar,Very different from what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,"None for me at least. I work with embedded systems only sparsely, so I am not familiar with this kind of interface for debugging.","It was very non-intuitive. In the end I could not figure out how exactly to debug using system B. Changing the power supply constantly was difficult to remember and time consuming. Also, finding the program counter or the variable names was also very difficult. Seems like one has to think about several things at the same time while working with this.","It was quite intuitive to work with. It is similar to the normal way that I use for debugging, which enables running the code line by line, and going in or out of a function. I am still kind of new to debuggers, so I could find only one bug. But if I had 10 more minutes, I would have found all of them.","None that I could really put a finger on. It was quite intuitive to use, and my failure in finding all the bugs was a result of only my inexperience in using debuggers. I usually simply run the program and then go to the line that throws the error and try to fix it.",31,Male,Matlab,,Yes,Yes,Some experience,No,No,N/A,N/A,N/A,N/A,,No,No,Similiar to battery-powered embedded systems,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
18,2022-10-04 18:25:16,6,en,1788663363,Yes,Yes,apple,Yes,Very difficult,Yes,,Some What,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Similar to what I am used to,Very different from what I am used to,Intuitive,Absolutely non-intuitive,Easy,Very difficult,The only positive aspect I can think of is that it is so simplistic that it is not bound to a specific IDE (I could also use it from a terminal centric workflow with VIM etc),"It was too complicated to resolve variable names etc so I just ended up doing print debugging instead. Similarly, the laborious task of manually entering the debugger through multiple terminal commands slows down the iteration speed.",Very intuitive and almost not noticeable that you are debugging on a different system with a hardware debugger.,"I found it a bit surprising that the system can just apply a constant voltage on a breakpoint. I'm not sure how realistic that would be in practice. From the side of usability, I cannot think of any immediate drawbacks.",27,Male,Other,Julia,Yes,No,Little experience,No,Yes,Yes,No,No,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,,2,en,1729719596,Yes,Yes,,N/A,,,,,N/A,,,,,N/A,,,,,,N/A,,,,,N/A,,,,,N/A,,,,,,,,,,,,,,,,,,N/A,,,N/A,N/A,,N/A,N/A,N/A,N/A,N/A,N/A,,N/A,N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,2022-10-05 11:00:18,6,en,1421078722,Yes,Yes,apple,Yes,Very Easy,Yes,,Yes,No,,,,,Yes,Somewhat difficult,Yes,,A lot,pear,No,,,,,No,,,,,Yes,Neither easy nor difficult,Other,Reading the code and reasoning about it.,No,Yes,No,Very similar to what I am used to,Very different from what I am used to,Absolutely intuitive,Non-intuitive,Easy,Somewhat difficult,Being able to control the power level the system is getting,having to compile every time to put break points. not being able to print the values of stack variables. not being able to inspect variables by name. not being able to step through the code freely. ,"visual debugging. easy stepping, no limitations on the type of variable i can inspect and very easy to do so. call stack displayed. stopping the execution shows me exactly which line the code has stopped",sometimes variables are optimized out by the compiler,25,Male,Rust,,Yes,Yes,A lot of experience,Yes,Yes,Yes,No,No,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
21,2022-10-05 12:36:21,6,en,1910482661,Yes,Yes,apple,Yes,Easy,Yes,,A lot,No,,,,,Yes,Somewhat difficult,Other,knowledge from previous part with system A,Some What,pear,No,,,,,No,,,,,No,,,,,No,No,Very similar to what I am used to,Different from what I am used to,Neither intuitive nor non-intuitive,Intuitive,Neither easy nor difficult,Very easy,"serial monitor and debug interface are combined, which is what I am used to from gdb.
in general, I think it has a similar feel as gdb, which I like.
it is also quite to the point, and generally works in a obvious way.","the whole setup was very sensitive to the setup of the DUT.
sometimes the supervisor had to force-reset the device, or otherwise it would not attach to the debugger properly (the green led had to be _blinking_, but often it did not blink at all (just on)).
having to re-flash for adding just one breakpoint is also pretty much the most inconvenient way of adding breakpoints. not only because it requires a lot of time, but also keeps you off the track of thought, leading to longer debugging times in general.","platformio and vs code are very familiar user interfaces to me.
although I am not a big fan of the vs code interface in general, the debugger interface in general is decent (still, I highly prefer the CLion/JetBrains debugger interface).
compared to the textual debugging, it is more convenient to be able to use the GUI buttons and/or F-key shortcuts to control the debugger.
or in other words: the GUI, and especially the click-line-to-set-breakpoint functionality are positives.
also a plus is that this debugger allows setting breakpoints while the DUT is already running, not requiring re-flashing","although not as bad as System B, it was very sensitive to the way in which you started the debugger and managed the voltage of the emulator.
in general, it was not possible to hook up the debugger while the system was in square power supply mode.
that is of course not necessarily realistic, as I think the whole point is to be able to debug while the system is experiencing the pulsed power supply.
the serial monitor was also a bit tricky to set up, but that is of course partially explained due to the actal bug in the UART part of the code",21,Male,C/C++,,Yes,Yes,Some experience,Yes,Yes,Yes,No,Yes,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,2022-10-05 18:31:19,6,en,1163236137,Yes,Yes,apple,Yes,Easy,Other,No with code glimpse,No,Yes,Somewhat difficult,Yes,,A little,Yes,Very difficult,Yes,,Yes,pear,No,,,,,Yes,Easy,Other,Just reading the code,No,Yes,Somewhat difficult,Other,Influnced by finding bug in system A,No,Yes,No,Similar to what I am used to,Different from what I am used to,Intuitive,Non-intuitive,Very easy,Somewhat difficult,"Headless command line only system, independent of IDE. Can be useful for remote debugging scenarios and non-IDE uses. Also easie",Non-Intuitive. Not user friendly. Also very buggy. Would be nice if Config files could be use to setup the debug attachment,"Easy to use, Familar. Leverages the code IDE to be easy to use easy to debug. Lot more information with watch and program stack and also Internal Registers",Tied to single IDE. Not portable(maybe?) ,28,Male,C/C++,,Yes,No,A lot of experience,Yes,Yes,Yes,Yes,Yes,Yes,,Yes,Yes,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,2022-10-06 14:25:13,6,en,1565310414,Yes,Yes,apple,Yes,Somewhat difficult,Yes,,Some What,No,,,,,No,,,,,pear,No,,,,,No,,,,,No,,,,,Yes,No,Neither different nor similar,Very different from what I am used to,Absolutely intuitive,Non-intuitive,Very easy,Very difficult,Could not see them,"Limited number of breaking points, no steps, need to flash after every change","Intuitive, stepping, reflashning automatic, displaying variables, etc.",nothing to add,33,Male,Matlab,,Yes,Yes,Some experience,No,No,N/A,N/A,N/A,N/A,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
24,2022-10-06 15:43:13,6,en,1510785153,Yes,Yes,apple,Yes,Very Easy,Yes,,A lot,Yes,Very difficult,Other,Primarily by examining where result came from,A little,Yes,Somewhat difficult,Yes,,Yes,pear,Yes,Somewhat difficult,Yes,,Some What,No,,,,,Yes,Neither easy nor difficult,Other,I noticed there was no reason the rest shouldnt print in the code.,A little,Yes,No,Very similar to what I am used to,Different from what I am used to,Absolutely intuitive,Non-intuitive,Very easy,Somewhat difficult,The ability to choose what breakpoint you want to wait for.,"The error message related to not reaching a breakpoint (for some reason) seemed very confusing.
I wanted to use the program counter to see where I was, but this was non-obvious. Additionally I wanted to take steps in the code but could not find out how to without placing EXTERNAL_BREAKPOINT everywhere (which is further worsened by the long / error-prone setup process after each code change).","Its very intuitive, as setting a breakpoint is easy & manouvering in the code (next line or step out, or play) are simple to do.
Additionally its well intergrated into the IDE (clearly showing current line & potentially showing what is in memory (this was less useful to me as variables had been optimized away, but I assume it can be shown somehow))","I kept switching between monitor and debugger to see the actual output. This switching was slightly tedious. In comparison to system b this was however only a mild inconvenience.
Going to a specific breakpoint is also less simple, as one has to specifically disable other breakpoints one might reach (as the breakpoints aren't identified by an id).",23,Male,Other,Dlang,Yes,Yes,Some experience,No,Yes,No,Yes,Yes,No,,No,No,Somewhat difficult,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
